include: 'walker.cx';

define: nwalkers 10;
define: delay-ms 150;
define: (r-stride l-stride) 4 -4;

let: (screen-x screen-y) screen-size;
let: max-x $screen-x #l-clip `width get -;
let: max-y $screen-y #l-clip `height get -;

let: scripts Stack new;
let: buf Buf new;

func: render()()
  $buf 0 seek
  $scripts &call for
  #out clear-screen
  $buf str #out print
  #out flush;

func: start-script()()
  let: start-x $max-x rand ++;
  let: start-y $max-y rand ++;
  let: left 2 rand 1 =;
  let: w $start-x $start-y $left #l-clip #r-clip if-else new-walker;
  let: dx $left #l-stride #r-stride if-else ref;

  $scripts {
    let: x $w `x get;
    $x $w `y get $buf move-to
    $w next-frame $buf print
    let: nx $x $dx deref +;
    $w `x $nx put

    $nx 0 > {
      $nx $max-x > {
        $dx #l-stride set
        $w `clip #l-clip put
	$w `x $max-x put
      } if
    } {
      $dx #r-stride set
      $w `clip #r-clip put
      $w `x 1 put
    } if-else
  } push;

let: poll Poll new;
let: is-done #f ref;

#out hide-cursor
raw-mode

$poll #in {
  #in read-char _
  $is-done #t set
} on-read

#nwalkers &start-script times

{
  render
  $poll #delay-ms wait _
  $is-done deref !
} while

#out clear-screen
1 1 #out move-to
#out show-cursor
normal-mode