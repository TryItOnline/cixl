/*
  Extends cx/io/term with support for ANSI graphics.

  https://github.com/basic-gongfu/cixl#getting-started
*/

lib: cx/io/term (

use:
  (cx/abc Char Int)
  (cx/const define:)
  (cx/func func:)
  (cx/iter for times)
  (cx/rec get new put rec:)
  (cx/stack Stack)
  (cx/var let:);

define: csi-esc '@027[';

define: clear-row-end [#csi-esc '0K'];
define: clear-row [#csi-esc '2K'];
define: clear-screen-end [#csi-esc '0J'];
define: reverse-colors [#csi-esc '7m'];
define: save-pos [#csi-esc @s];
define: restore-pos [#csi-esc @u];

func: move-up(n Int)(_ Stack) 
  [#csi-esc $n @A];

func: move-down(n Int)(_ Stack) 
  [#csi-esc $n @B];

func: move-left(n Int)(_ Stack) 
  [#csi-esc $n @D];

func: move-right(n Int)(_ Stack) 
  [#csi-esc $n @C];

func: vline(c Char n Int)(_ Stack)
  [$n {$c 1 move-down {} for 1 move-left {} for} times];

func: hline(c Char n Int)(_ Stack)
  [$n $c times];

);