'Testing cx/stack...' say

[] % 1 push % 2 push [1 2] = check

1 2 [3 4 5] len 3 = check

[1 2 3] pop 3 = check

[7 42] last 42 = check

[1 2] {2 *} for + 6 = check

[1 2] [3 4] < check

[1 2 3] [1 2] > check

[3 2 1] % #nil sort {} for + - -4 = check

[1 2 3] % {~ <=>} sort {} for + - 0 = check

(let: s [1 2 3];
 3 $s 6 {++ %} fill
 $s [1 2 3 4 5 6 7 8 9] =)

[1 'two' 3 4 'five' #nil] % 1 2 3 move [1 #nil #nil #nil 'two' 3] = check

[1 'two' 3 'four' 5 #nil] % 2 2 -1 move [1 3 'four' #nil 5 #nil] = check

7 14 % + 28 = check

7 14 % _ + 21 = check

[1 2 3] riter stack [3 2 1] = check