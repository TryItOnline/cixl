'Testing cx/type...' say

42 type Int = check

Int A is check

A Int is !check

42 Opt is check

42 Opt<Int> is check

Int Opt<Num> is check

42 Opt<Str> is !check

#nil Opt<Int> is check

type-id: StackIter<A>(Seq<Arg0>) Stack<Arg0> Iter<Arg0>;
[1 2 3] StackIter<Int> is check
'foo' iter StackIter<Char> is check
42 StackIter is !check

type: IntStr Int Str;
IntStr<Int> Int is check
42 IntStr<Int> is !check
42 int-str IntStr<Int> is check
'foo' int-str str 'foo' = check