* add cx_op_eval
** change fn ptr to int/enum + switch
* ---
* change macros to compile to ops
** add set op
** replaces macro_op
* ---
* add wrap macro for cx_add_type
** pass NULL
* change func imps to return bool
* update readme
* step pointers instead of cx_vec_get in func_imp_match
* speed up cx_is
** add cx_type.tag, tags uint64_t
** keep next_type_tag in cx
** start on 1, double on each new type
** change cx_is to binary AND type tags instead
* add fail func
** like test but just call error with message
* add basic io
** add ask fn from main
*** read from stdin until newline with prompt
** add say fn from main
*** write to stdout with newline
* add str \n support
* add str \' support

* add cx_init_io with load fn
** load first repl arg if any
** push rest on stack
* add parse/unparse/eval
** add types/tok.h/c
** add Tok type
*** switch type in fprint
** add Toks type, inherit Vect
*** add call support
*** add unparse fn
* add Rat type
* add Str 'int' fn
* add Int 'str' fn
* add Char 'int' fn
* add Int 'char' fn
* add str interpolation

clock {,10000 times {,fib 50 _}} / 1000000

eval parse '7 35 +'

func: fib-rec(a b n Int) $n? if {, recall $b, $a + $b, -- $n} $a;

'{,fib 50 _}' compile call call
