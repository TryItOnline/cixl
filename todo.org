#define htonll(x) ((1==htonl(1)) ? (x) : ((uint64_t)htonl((x) & 0xFFFFFFFF) << 32) | htonl((x) >> 32))
#define ntohll(x) ((1==ntohl(1)) ? (x) : ((uint64_t)ntohl((x) & 0xFFFFFFFF) << 32) | ntohl((x) >> 32))

* --- cixtris
** add block-width / block-height fns
*** use for detecting max-x/y
*** check when dropping new pieces
** add down key
*** drop block immediately
** add support for clearing rows
** add missing shapes
** add (p)ause support
*** change main if to switch:
* --- cxcrypt
* add Pub/PrivKey
** add asource/asink examples
*** use asymmetric encryption to secure a network channel
*** shuffle stdin-stdout
*** read/write size prefixed blocks
** add README
* --- cixl
* add Table emit support
** copy Rec
* replace box.as_ptr with as_func/fimp/etc
* add cxtls project
** use gnutls
** integrate into poll framework
** https://github.com/abligh/tlsproxy
* replace cx_tok.as_ptr with as_id, as_literal etc.
** use cx_sym for CX_TID?
* convert type id to sym
* convert macro id to sym
* convert func id to sym
* convert repl to use getline
* optimize const emit
** add op_type.emit_consts
*** rewrite getconst emit
** add cx_getconst_op.value
*** set in parse_const
*** change eval to push value
* replace clone fallback to copy with error
* replace varargs with size/array+macro
* --- tellux
* switch buffers to fixed sized stacks like cixtrix
* add visualization of current fg/bg
* implement saving
** launch with mandatory filename
** add 's' command to save
* implement loading
** try reading file on startup
